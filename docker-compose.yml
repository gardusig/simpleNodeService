services:
  db:
    image: postgres:16-alpine
    restart: always
    ports:
      - 2345:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - random_network

  server_0:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    environment:
      - PORT=${SERVER_0_PORT}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public&connect_timeout=${DB_CONNECTION_TIMEOUT}
    networks:
      - random_network

  server_1:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    environment:
      - PORT=${SERVER_1_PORT}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public&connect_timeout=${DB_CONNECTION_TIMEOUT}
    networks:
      - random_network

  server_2:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    environment:
      - PORT=${SERVER_2_PORT}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public&connect_timeout=${DB_CONNECTION_TIMEOUT}
    networks:
      - random_network

  nginx:
    build:
      context: .
      dockerfile: docker/nginx.Dockerfile
    ports:
      - "${NGINX_EXPOSED_PORT}:443"
    environment:
      - SERVER_0_HOST=server_0
      - SERVER_0_PORT
      - SERVER_1_HOST=server_1
      - SERVER_1_PORT
      - SERVER_2_HOST=server_2
      - SERVER_2_PORT
    networks:
      - random_network

  lint:
    build:
      context: .
      dockerfile: docker/test.Dockerfile
      target: lint
    networks:
      - random_network

  e2e:
    build:
      context: .
      dockerfile: docker/test.Dockerfile
      target: e2e
    environment:
      - HOST=nginx
      - PORT=443
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public&connect_timeout=${DB_CONNECTION_TIMEOUT}
      - API_BASE_URL=https://nginx:443/api
    networks:
      - random_network

networks:
  random_network:
    driver: bridge
